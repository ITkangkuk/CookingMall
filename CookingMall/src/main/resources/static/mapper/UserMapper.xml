<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper 
	PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="com.example.Cookingmall.cook_user.UserMapper">

<resultMap type="com.example.Cookingmall.cook_user.User" id="User">

    <result property="user_num" column="num"/>
		<result property="user_id" column="id"/>
		<result property="user_num" column="num"/>
		<result property="user_pwd" column="pwd"/>
		<result property="user_name" column="name"/>
		<result property="user_email" column="email"/>
		<result property="user_tel" column="tel"/>
		<result property="user_nickname" column="nickname"/>
		<result property="user_postcode" column="postcode"/>
		<result property="user_addr1" column="addr1"/>
		<result property="user_addr2" column="addr2"/>
		<result property="user_birthday" column="birthday"/>
		<result property="user_type" column="type"/>
	</resultMap>

	<!-- 유저 회원가입 -->
	<insert id="insertUser" parameterType="com.example.Cookingmall.cook_user.User">
		INSERT INTO sellerre_user VALUES (
			seq_sellerre_user.nextval,
			#{user_id},
			#{user_num},
			#{user_pwd},
			#{user_name},
			#{user_email},
			#{user_tel},
			#{user_nickname},
			#{user_postcode},
			#{user_addr1},
			#{user_addr2},
			#{user_birthday},
			#{user_type}
		)
	</insert>
	
<!-- 유저 아이디로 검색 -->
	<select id="selectUserId" resultMap="User" parameterType="String">
		SELECT 	*
		FROM	cook_user
		WHERE 	user_id = #{user_id}
	</select>

<!-- 유저 닉네임으로 검색 -->
	<select id="selectUserNickName" resultMap="User" parameterType="String">
		SELECT 	*
		FROM	cook_user
		WHERE 	user_nickname = #{user_nickname}
	</select>
	
<!-- 유저 정보 수정 -->
	<update id="updateUser" parameterType="com.example.Cookingmall.cook_user.User">
		UPDATE	cook_user
		
		SET		user_num = #{user_num},
		        user_pwd = #{user_pwd}, 
				user_name = #{user_name}, 
				user_nickname = #{user_nickname}, 
				user_email = #{user_email}, 
				user_tel = #{user_tel}, 
				user_postcode = #{user_postcode}, 
				user_addr1 = #{user_addr1}, 
				user_addr2 = #{user_addr2}
				
		WHERE	user_id = #{user_id}
	</update>
	
<!-- 아아디 중복 검색 -->
	<select id="idCheck" resultType="int" parameterType="String">
		SELECT 	COUNT(*)
		FROM	cook_user
 		WHERE 	user_id = #{user_id}
	</select>

<!-- 닉네임 중복 검색 -->
	<select id="nicknameCheck" resultType="int" parameterType="String">
		SELECT 	COUNT(*)
		FROM	cook_user
 		WHERE 	user_nickname = #{user_nickname}
	</select>
	
<!-- 이메일 중복 검색 -->
	<select id="emailCheck" resultType="int" parameterType="String">
		SELECT 	COUNT(*)
		FROM	cook_user
 		WHERE 	user_email = #{user_email}
	</select>
	
<!-- 이메일 검색 -->
	<select id="selectUserEmail" resultMap="User" parameterType="String">
		SELECT 	*
		FROM	cook_user
		WHERE 	user_email = #{user_email}
	</select>
		
<!-- 유저 삭제 -->
	<delete id="deleteUser" parameterType="String">
		DELETE 	FROM cook_user
		WHERE 	user_id = #{user_id}
	</delete>

<!-- 총 유저 수 -->
   <select id="getTotalUserNum" resultType="int" >
      SELECT  COUNT(user_id) 
       FROM   cook_user 
   </select>	
   
</mapper>